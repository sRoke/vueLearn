<template>
  <div>
  
    <div class="m-b-20 ovf-hd">
      <reset-btn class="fr m-l-10"
                 :reset="handleClearFilter">
      </reset-btn>
  
      <div class="fr w-250 m-l-10">
        <el-input v-model="params.keyword"
                  placeholder="联系人、手机号码">
          <el-button slot="append"
                     icon="search"
                     @click.prevent="setRoute()">
          </el-button>
        </el-input>
      </div>
  
      <div class="fr w-200 m-l-10">
        <el-input v-model="params.search_name"
                  placeholder="公司名称"></el-input>
      </div>
  
      <div class="fr w-200">
        <el-input v-model="params.code"
                  placeholder="公司编号"></el-input>
      </div>
  
      <div class="fl m-r-5"
           v-if="canEdit">
        <a @click="handleAddClient"
           class="btn-link-large add-btn">新增</a>
      </div>
  
      <div class="fl m-r-5"
           v-if="canEdit">
        <a class="btn-link-large edit-btn"
           @click="connect">关联</a>
      </div>
  
      <div class="fl m-r-5"
           v-if="canEdit">
        <a class="btn-link-large del-btn"
           @click="batchDelete">删除</a>
      </div>
  
    </div>
  
    <el-row>
  
      <el-col :span="12"
              class="left-table">
        <el-table :data="usersData"
                  highlight-current-row
                  row-class-name="tx-c"
                  v-loading.body="userLoading"
                  @current-change="handleCurrentChange">
          <el-table-column label="注册账号"
                           class="top-title"
                           header-align="center">
            <el-table-column prop="code"
                             label="注册编号"
                             width="140"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="name"
                             label="公司名称"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="contact"
                             label="联系人"
                             width="100"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="phone"
                             label="手机号码"
                             width="120"
                             header-align="center">
            </el-table-column>
            <el-table-column label="操作"
                             width="75"
                             inline-template
                             v-if="canEdit"
                             header-align="center">
              <router-link :to="{ name: 'deDetail', params: { id: row.id, path }}"
                           class="btn-link edit-btn">查看
              </router-link>
            </el-table-column>
          </el-table-column>
        </el-table>
        <el-pagination small
                       class="fr"
                       :page-count="usersCount"
                       v-if="usersCount > 1"
                       layout="prev, pager, next"
                       @current-change="fetchUserByPage">
        </el-pagination>
      </el-col>
  
      <el-col :span="12"
              class="right-table">
        <el-table :data="clientsData"
                  row-class-name="tx-c"
                  v-loading.body="clientLoading"
                  @selection-change="handleSelectionChange">
          <el-table-column label="公海客户"
                           class="top-title"
                           header-align="center">
            <el-table-column width="35"
                             type="selection"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="code"
                             label="公海编号"
                             width="140"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="name"
                             label="公司名称"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="contact"
                             label="联系人"
                             width="120"
                             header-align="center">
            </el-table-column>
            <el-table-column prop="phone"
                             label="手机号码"
                             width="120"
                             header-align="center">
            </el-table-column>
            <el-table-column label="操作"
                             width="75"
                             :page-size="15"
                             inline-template
                             v-if="canEdit"
                             header-align="center">
              <router-link :to="{ name: 'publicClientDetail', params: { id: row.id, path }}"
                           class="btn-link edit-btn">查看
              </router-link>
            </el-table-column>
          </el-table-column>
        </el-table>
        <el-pagination small
                       class="fr"
                       :page-size="15"
                       :page-count="clientCount"
                       v-if="clientCount > 1"
                       layout="prev, pager, next"
                       @current-change="fetchClientByPage">
        </el-pagination>
      </el-col>
  
    </el-row>
  
  </div>
</template>
<script>
import address from 'assets/js/address'
import resetBtn from 'components/common/reset.vue'
import http from 'assets/js/http'
export default {
  data() {
    return {
      fullscreenLoading: false,
      selList: [],
      authList: [],
      userId: 0,
      usersData: [],
      usersCount: 0,
      userLoading: false,
      clientsData: [],
      clientCount: 0,
      clientLoading: false,
      currentRow: null,
      params: {
        keyword: null,
        code: null,
        search_name: null
      },
      userQuery: {
        page: 1,
        pageSize: 15
      },
      clientQuery: {
        page: 1,
        pageSize: 15,
        search: 0, // 0 为关联搜索 1 为搜索框搜索
        name: null,
        phone: null
      }
    }
  },
  methods: {
    init() {
      this.handleQuery()
      this.fullscreenLoading = true
      let params = this.getQuery
      this.fetchUsers()
    },
    fetchUsers() { // 获取未关联的账号列表
      this.userLoading = true
      let params = { ...this.userQuery, type: 1 }
      this.apiGet('customers/unrelated_users', { params }).then((res) => {
        this.userLoading = false
        if (res.code == 200) {
          this.usersData = res.data.list
          this.usersCount = res.data.totalPage
        }
      })
    },
    fetchUserByPage(val) { // 根据分页获取账号数据
      this.userQuery.page = val
      this.fetchUsers()
    },
    fetchClientsData() { // 获取公海客户列表
      this.clientLoading = true
      let data = {
        pageSize: 15,
        page: this.clientQuery.page,
        search: this.clientQuery.search
      }
      if (this.clientQuery.search) {
        data = { ...data, ...this.params }
      } else {
        data = { ...data, ...this.clientQuery }
      }
      let params = { ...data, type: 1 }
      this.apiGet('customers/unrelated_customers', { params }).then((res) => {
        this.clientLoading = false
        if (res.code == 200) {
          this.clientsData = res.data.list
          this.clientCount = res.data.totalPage
        } else {
          this.clientsData = []
          this.clientCount = 0
        }
      })
    },
    fetchClientByPage(val) { // 根据分页获取客户信息
      this.clientQuery.page = val
      this.fetchClientsData()
    },
    handleCurrentChange(row) {
      if (!row) {
        return
      }
      this.userId = row.id
      this.clientQuery.search = 0
      this.clientQuery.name = row.name
      this.clientQuery.phone = row.phone
      this.fetchClientsData()
    },
    handleClearFilter() {
      this.params.code = null
      this.params.keyword = null
      this.params.search_name = null
    },
    handleSelectionChange(val) { // 批量选择
      this.selList = []
      _(val).forEach((res, key) => {
        this.selList.push(res.id)
      })
    },
    batchDelete() { // 批量删除客户
      if (!this.hasSelect) {
        return _g.toastMsg(this, 'warning', '请勾选数据')
      }
      let data = { ids: this.selList }
      this.$confirm('确认批量删除操作?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        this.apiPost('customers/deletes', data).then((res) => {
          if (res.code !== 200) {
            return _g.dealError(this, res)
          }
          _g.toastMsg(this, 'success', '删除成功')
          this.fetchClientsData()
        })
      })
    },
    connect() { // 关联帐号
      if (!this.hasSelect) {
        return _g.toastMsg(this, 'warning', '请勾选数据')
      }
      if (this.selList.length > 1) {
        return _g.toastMsg(this, 'warning', '只能关联一个公海客户')
      }
      this.handleConnect()
    },
    handleConnect() { // 关联处理,发请求
      let data = {
        cid: this.selList[0],
        did: this.userId
      }
      this.apiPost('customers/add_relation_customer', data).then(res => {
        if (res.code !== 200) {
          _g.dealError(this, res)
        }
        _g.toastMsg(this, 'success', '关联成功')
        _g.reloadPage(this)
      })
    },
    setRoute() { // 设置路由
      let query = this.setQuery
      this.clientQuery.search = 1
      router.push({ path: '/client/publicClient/unRelative/demand', query })
      this.fetchClientsData()
    },
    handleQuery() {
      let queryParams = this.$route.query
      let hasQuery = Object.keys(queryParams).length > 0
      for (let key in this.$route.query) {
        this.$route.query[key] ? this.params[key] = this.$route.query[key] : null
      }
    },
    handleAddClient() { // 添加客户管理
      let data = { id: this.userId }
      this.apiPost('customers/add_customer', data).then(res => {
        if (res.code !== 200) {
          return _g.dealError(this, res)
        }
        _g.toastMsg(this, 'success', res.data)
        setTimeout(this.fetchClientsData, 1000)
      })
    }
  },
  computed: {
    hasSelect() {
      return this.selList.length !== 0
    },
    setQuery() {
      let query = {}
      for (let key in this.params) {
        this.params[key] ? query[key] = this.params[key] : null
      }
      return query
    },
    getQuery() {
      let query = {}
      for (let key in this.$route.query) {
        this.$route.query[key] ? query[key] = this.$route.query[key] : null
      }
      return query
    },
    canEdit() { // 是否拥有编辑权限
      return this.authList == null || this.authList['unRelativeDemand_edit']
    }
  },
  mounted() {
    this.init()
    this.authList = Lockr.get('authList')
  },
  components: {
    'reset-btn': resetBtn
  },
  mixins: [http]
}
</script>

<style>
.left-table {
  padding-right: .5em;
}

.right-table {
  padding-left: .5em;
}

.row-class {
  cursor: pointer;
}

.left-table .el-table_1_column_1,
.right-table .el-table_1_column_7 {
  text-align: center;
}

.left-table .el-pagination,
.right-table .el-pagination {
  padding: 5px 0;
}
</style>