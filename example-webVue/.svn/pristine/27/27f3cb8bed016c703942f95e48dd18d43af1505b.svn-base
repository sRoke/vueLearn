<template>
 <div class="common_count" v-if="isView" v-loading.fullscreen.lock="fullscreenLoading" element-loading-text="正在加载中">
    <div class="block fr m-r-5 m-b-20">
      <el-date-picker
        v-model="time"
        type="daterange"
        placeholder="选择日期范围"
        format="yyyy-MM-dd"
        @change="searchCount()"
        >
      </el-date-picker>
    </div>
    <div id="main" ref="main" v-show="is_echarts"></div>
    <el-table border v-if="loadingDone"
      :data="tableData"
      style="width: 100%" >
      <el-table-column
        prop="all"
        label="公海客户数" 
        :span="5">
      </el-table-column>
    
      <el-table-column
        prop="effective"
        label="有效客户"
        :span="5">
      </el-table-column>
      
      <el-table-column
        prop="notConfirm"
        label="未确认客户"
        :span="5">
      </el-table-column>

      <el-table-column
        prop="invalid"
        label="无效客户"
        :span="5">
      </el-table-column>
     
      <el-table-column
        prop="ratio"
        label="有效率"
        :span="4">
      </el-table-column>
    </el-table>
 </div>
</template>

<style>
  #main{
    width: 600px;
    height:400px;
    margin: auto;
  }
  .common_count .el-table th>.cell,
  .common_count .el-table td>.cell{
    text-align: center;
  }
</style>

<script>
  import http from '../../../assets/js/http'
  import echarts from '../../../assets/js/echarts.min'
  export default {
    data() {
      return {
        fullscreenLoading: false,
        tableData: [],
        time: '',
        is_echarts: true,
        startT: '',
        endT: '',
        isView: false,
        show: Lockr.get('authList')
      }
    },
    methods: {
      getCustomerCount() { // 获取统计客户的信息
        var self = this
        self.apiGet('customers/customer_statistic').then((res) => {
          // console.log('res = ', _g.j2s(res))
          this.fullscreenLoading = false
          if (res.code != 200) {
            _g.dealError(self, res)
          } else {
            if (res.data) {
              res.data.ratio = res.data.rate + '%'
            }
            self.tableData.push(res.data)
            // console.log('1222222222222res = ', _g.j2s(self.tableData))
          }
          // self.echartCircle();
        })
      },
      getData() { // 通过时间刷选统计的客户的信息
        var self = this
        self.tableData = []
        self.apiGet('customers/customer_statistic?time=' + self.startT + ' - ' + self.endT + '&page=' + self.currentPage).then((res) => {
          this.fullscreenLoading = false
          // console.log('0000000000res = ', _g.j2s(res))
          if (res.code != 200) {
            _g.dealError(self, res)
          } else {
            if (res.data) {
              res.data.ratio = res.data.rate + '%'
            }
            self.tableData.push(res.data)
            // console.log('1222222222222res = ', _g.j2s(self.tableData))
          }
          self.echartCircle()
        })
      },
      searchCount() { // 转换日期的格式
        var self = this
        // alert(self.time[0])
        if (self.time != null) {
          self.startT = moment(self.time[0]).format('YYYY-MM-DD')
          self.endT = moment(self.time[1]).format('YYYY-MM-DD')
          self.getData()
        } else {
          return
        }
      },
      echartCircle() { // 以扇形的方式展示客户信息
        // 引入 ECharts 主模块
        // var echarts = require('echarts')
        var self = this
        var effectiveData = '有效客户'
        var notConfirmData = '未确认客户'
        var invalidData = '无效客户'
        var data = []
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('main'))
        if (!self.tableData[0].all) {
          self.is_echarts = false
          return
        }
        self.is_echarts = true
        if (self.tableData[0].effective) {
          data.push(effectiveData)
        }
        if (self.tableData[0].notConfirm) {
          data.push(notConfirmData)
        }
        if (self.tableData[0].invalid) {
          data.push(invalidData)
        }
        // console.log('data=' + _g.j2s(data))
        // 绘制图表
        myChart.setOption({
          color: ['#00CC00', '#199ED8', '#999999'],
          title: {
            text: '公海客户数' + '\n\n' + self.tableData[0].all + '\n\n' + '有效率：' + self.tableData[0].ratio,
            x: 'center',
            y: 'center',
            itemGap: 20,
            textStyle: {
              color: '#000',
              fontFamily: '微软雅黑',
              fontSize: 20,
              fontWeight: 'bolder'
            }
          },
          tooltip: {
            trigger: 'item',
            formatter: '{b} <br/> 数量：{c} </br> 占比：{d}%'
          },
          legend: {
            orient: 'vertical',
            x: 'right',
            y: 'center',
            selectedMode: false,
            data: data
          },
          calculable: true,
          series: [
            {
              name: '访问来源',
              type: 'pie',
              radius: ['55%', '70%'],
              itemStyle: {
                normal: {
                  label: {
                    show: false
                  },
                  labelLine: {
                    show: false
                  }
                },
                emphasis: {
                  label: {
                    show: true,
                    position: 'center',
                    textStyle: {
                      fontSize: '20',
                      fontWeight: 'bold'
                    }
                  }
                }
              },
              data: [
                { value: self.tableData[0].effective, name: '有效客户' },
                { value: self.tableData[0].notConfirm, name: '未确认客户' },
                { value: self.tableData[0].invalid, name: '无效客户' }
              ]
            }
          ]
        })
        this.fullscreenLoading = false
      },
      echartShow() {
        var self = this
        var time = ''
        if (self.tableData.length) {
          clearTimeout(time)
          self.echartCircle()
        } else {
          time = setTimeout(function() {
            self.echartShow()
          }, 1000)
        }
      }
    },
    computed: {
      loadingDone() {
        return !this.fullscreenLoading
      }
    },
    created() {
      this.fullscreenLoading = true
      if (this.show == null || this.show['publicClient_view'] || this.show['publicClient_edit'] || this.show['publicClient_button']) {
        this.isView = true
      }
      this.getCustomerCount()
    },
    mounted() {
      this.echartShow()
    },
    mixins: [http]
  }
</script>